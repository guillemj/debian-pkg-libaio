From 0cd5b9ea20e8bc315d43ba1e38ed113804e3c759 Mon Sep 17 00:00:00 2001
From: Guillem Jover <guillem@hadrons.org>
Date: Sat, 20 Jul 2019 21:18:01 +0200
Subject: [PATCH libaio 03/28] man: Use the correct troff macro for comments

Signed-off-by: Guillem Jover <guillem@hadrons.org>
Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
---
 man/io_fsync.3        | 12 ++++++------
 man/io_getevents.3    | 36 ++++++++++++++++++------------------
 man/io_prep_fsync.3   | 14 +++++++-------
 man/io_prep_pread.3   | 20 ++++++++++----------
 man/io_prep_pwrite.3  | 20 ++++++++++----------
 man/io_set_callback.3 |  2 +-
 man/io_submit.3       | 24 ++++++++++++------------
 7 files changed, 64 insertions(+), 64 deletions(-)

diff --git a/man/io_fsync.3 b/man/io_fsync.3
index 859de1b..77a62ff 100644
--- a/man/io_fsync.3
+++ b/man/io_fsync.3
@@ -1,9 +1,9 @@
-./" static inline int io_fsync(io_context_t ctx, struct iocb *iocb, io_callback_t cb, int fd)
-./" {
-./" 	io_prep_fsync(iocb, fd);
-./" 	io_set_callback(iocb, cb);
-./" 	return io_submit(ctx, 1, &iocb);
-./" }
+.\" static inline int io_fsync(io_context_t ctx, struct iocb *iocb, io_callback_t cb, int fd)
+.\" {
+.\" 	io_prep_fsync(iocb, fd);
+.\" 	io_set_callback(iocb, cb);
+.\" 	return io_submit(ctx, 1, &iocb);
+.\" }
 .TH io_fsync 3 2002-09-12 "Linux 2.4" Linux AIO"
 .SH NAME
 io_fsync \- Synchronize a file's complete in-core state with that on disk
diff --git a/man/io_getevents.3 b/man/io_getevents.3
index a4f8b57..1e643ac 100644
--- a/man/io_getevents.3
+++ b/man/io_getevents.3
@@ -1,21 +1,21 @@
-./"/* io_getevents:
-./" *      Attempts to read at least min_nr events and up to nr events from
-./" *      the completion queue for the aio_context specified by ctx_id.  May
-./" *      fail with -EINVAL if ctx_id is invalid, if min_nr is out of range,
-./" *      if nr is out of range, if when is out of range.  May fail with
-./" *      -EFAULT if any of the memory specified to is invalid.  May return
-./" *      0 or < min_nr if no events are available and the timeout specified
-./" *      by when has elapsed, where when == NULL specifies an infinite
-./" *      timeout.  Note that the timeout pointed to by when is relative and
-./" *      will be updated if not NULL and the operation blocks.  Will fail
-./" *      with -ENOSYS if not implemented.
-./" */
-./"asmlinkage long sys_io_getevents(io_context_t ctx_id,
-./"                                 long min_nr,
-./"                                 long nr,
-./"                                 struct io_event *events,
-./"                                 struct timespec *timeout)
-./"
+.\"/* io_getevents:
+.\" *      Attempts to read at least min_nr events and up to nr events from
+.\" *      the completion queue for the aio_context specified by ctx_id.  May
+.\" *      fail with -EINVAL if ctx_id is invalid, if min_nr is out of range,
+.\" *      if nr is out of range, if when is out of range.  May fail with
+.\" *      -EFAULT if any of the memory specified to is invalid.  May return
+.\" *      0 or < min_nr if no events are available and the timeout specified
+.\" *      by when has elapsed, where when == NULL specifies an infinite
+.\" *      timeout.  Note that the timeout pointed to by when is relative and
+.\" *      will be updated if not NULL and the operation blocks.  Will fail
+.\" *      with -ENOSYS if not implemented.
+.\" */
+.\"asmlinkage long sys_io_getevents(io_context_t ctx_id,
+.\"                                 long min_nr,
+.\"                                 long nr,
+.\"                                 struct io_event *events,
+.\"                                 struct timespec *timeout)
+.\"
 .TH io_getevents 2 2002-09-03 "Linux 2.4" "Linux AIO"
 .SH NAME
 io_getevents, aio_pgetevents \- Read resulting events from io requests
diff --git a/man/io_prep_fsync.3 b/man/io_prep_fsync.3
index 1173e2a..2daddee 100644
--- a/man/io_prep_fsync.3
+++ b/man/io_prep_fsync.3
@@ -1,10 +1,10 @@
-./" static inline void io_prep_fsync(struct iocb *iocb, int fd)
-./" {
-./" 	memset(iocb, 0, sizeof(*iocb));
-./" 	iocb->aio_fildes = fd;
-./" 	iocb->aio_lio_opcode = IO_CMD_FSYNC;
-./" 	iocb->aio_reqprio = 0;
-./" }
+.\" static inline void io_prep_fsync(struct iocb *iocb, int fd)
+.\" {
+.\" 	memset(iocb, 0, sizeof(*iocb));
+.\" 	iocb->aio_fildes = fd;
+.\" 	iocb->aio_lio_opcode = IO_CMD_FSYNC;
+.\" 	iocb->aio_reqprio = 0;
+.\" }
 .TH io_prep_fsync 3 2002-09-12 "Linux 2.4" Linux AIO"
 .SH NAME
 io_prep_fsync \- Synchronize a file's complete in-core state with that on disk
diff --git a/man/io_prep_pread.3 b/man/io_prep_pread.3
index 2c3b314..1ab28f5 100644
--- a/man/io_prep_pread.3
+++ b/man/io_prep_pread.3
@@ -1,13 +1,13 @@
-./" static inline void io_prep_pread(struct iocb *iocb, int fd, void *buf, size_t count, long long offset)
-./" {
-./" 	memset(iocb, 0, sizeof(*iocb));
-./" 	iocb->aio_fildes = fd;
-./" 	iocb->aio_lio_opcode = IO_CMD_PREAD;
-./" 	iocb->aio_reqprio = 0;
-./" 	iocb->u.c.buf = buf;
-./" 	iocb->u.c.nbytes = count;
-./" 	iocb->u.c.offset = offset;
-./" }
+.\" static inline void io_prep_pread(struct iocb *iocb, int fd, void *buf, size_t count, long long offset)
+.\" {
+.\" 	memset(iocb, 0, sizeof(*iocb));
+.\" 	iocb->aio_fildes = fd;
+.\" 	iocb->aio_lio_opcode = IO_CMD_PREAD;
+.\" 	iocb->aio_reqprio = 0;
+.\" 	iocb->u.c.buf = buf;
+.\" 	iocb->u.c.nbytes = count;
+.\" 	iocb->u.c.offset = offset;
+.\" }
 .TH io_prep_pread 3 2002-09-12 "Linux 2.4" Linux AIO"
 .SH NAME
 io_prep_pread \- Set up asynchronous read
diff --git a/man/io_prep_pwrite.3 b/man/io_prep_pwrite.3
index 669b8c2..f8d7fac 100644
--- a/man/io_prep_pwrite.3
+++ b/man/io_prep_pwrite.3
@@ -1,13 +1,13 @@
-./" static inline void io_prep_pwrite(struct iocb *iocb, int fd, void *buf, size_t count, long long offset)
-./" {
-./" 	memset(iocb, 0, sizeof(*iocb));
-./" 	iocb->aio_fildes = fd;
-./" 	iocb->aio_lio_opcode = IO_CMD_PWRITE;
-./" 	iocb->aio_reqprio = 0;
-./" 	iocb->u.c.buf = buf;
-./" 	iocb->u.c.nbytes = count;
-./" 	iocb->u.c.offset = offset;
-./" }
+.\" static inline void io_prep_pwrite(struct iocb *iocb, int fd, void *buf, size_t count, long long offset)
+.\" {
+.\" 	memset(iocb, 0, sizeof(*iocb));
+.\" 	iocb->aio_fildes = fd;
+.\" 	iocb->aio_lio_opcode = IO_CMD_PWRITE;
+.\" 	iocb->aio_reqprio = 0;
+.\" 	iocb->u.c.buf = buf;
+.\" 	iocb->u.c.nbytes = count;
+.\" 	iocb->u.c.offset = offset;
+.\" }
 .TH io_prep_pwrite 3 2002-09-12 "Linux 2.4" Linux AIO"
 .SH NAME
 io_prep_pwrite \- Set up iocb for asynchronous writes
diff --git a/man/io_set_callback.3 b/man/io_set_callback.3
index 3c7e43f..cc842f7 100644
--- a/man/io_set_callback.3
+++ b/man/io_set_callback.3
@@ -1,4 +1,4 @@
-./"static inline void io_set_callback(struct iocb *iocb, io_callback_t cb)
+.\"static inline void io_set_callback(struct iocb *iocb, io_callback_t cb)
 .TH io_set_callback 3 2002-09-12 "Linux 2.4" Linux AIO"
 .SH NAME
 io_set_callback \- Set up io completion callback function
diff --git a/man/io_submit.3 b/man/io_submit.3
index 7281147..a810b3f 100644
--- a/man/io_submit.3
+++ b/man/io_submit.3
@@ -1,15 +1,15 @@
-./"/* sys_io_submit:
-./" *      Queue the nr iocbs pointed to by iocbpp for processing.  Returns
-./" *      the number of iocbs queued.  May return -EINVAL if the aio_context
-./" *      specified by ctx_id is invalid, if nr is < 0, if the iocb at
-./" *      *iocbpp[0] is not properly initialized, if the operation specified
-./" *      is invalid for the file descriptor in the iocb.  May fail with
-./" *      -EFAULT if any of the data structures point to invalid data.  May
-./" *      fail with -EBADF if the file descriptor specified in the first
-./" *      iocb is invalid.  May fail with -EAGAIN if insufficient resources
-./" *      are available to queue any iocbs.  Will return 0 if nr is 0.  Will
-./" *      fail with -ENOSYS if not implemented.
-./" */
+.\"/* sys_io_submit:
+.\" *      Queue the nr iocbs pointed to by iocbpp for processing.  Returns
+.\" *      the number of iocbs queued.  May return -EINVAL if the aio_context
+.\" *      specified by ctx_id is invalid, if nr is < 0, if the iocb at
+.\" *      *iocbpp[0] is not properly initialized, if the operation specified
+.\" *      is invalid for the file descriptor in the iocb.  May fail with
+.\" *      -EFAULT if any of the data structures point to invalid data.  May
+.\" *      fail with -EBADF if the file descriptor specified in the first
+.\" *      iocb is invalid.  May fail with -EAGAIN if insufficient resources
+.\" *      are available to queue any iocbs.  Will return 0 if nr is 0.  Will
+.\" *      fail with -ENOSYS if not implemented.
+.\" */
 .TH io_submit 2 2002-09-02 "Linux 2.4" "Linux AIO"
 .SH NAME
 io_submit \- Submit io requests
-- 
2.26.0.292.g33ef6b2f38

