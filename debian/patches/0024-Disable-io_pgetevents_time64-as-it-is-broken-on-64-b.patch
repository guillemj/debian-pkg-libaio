From bcc3be97d899fceeacf8865a6f82dba9baa7e718 Mon Sep 17 00:00:00 2001
From: Guillem Jover <guillem@hadrons.org>
Date: Tue, 5 Mar 2024 02:01:57 +0100
Subject: [PATCH libaio 24/26] Disable io_pgetevents_time64 as it is broken on
 64-bit kernel 32-bit userland

On 64-bit kernels running 32-bit userland, this syscall misbehaves
when passing a sigmask by always returning -EINVAL. This works on 32-bit
kernels. The syscall entry point is possible wrong and needs to be fixed
in the kernel. For now disable as the code is handling clean 64-bit time_t
and the timeout is relative anyway.

Once this is fixed in the kernel, and after enough time has passed we
can decide whether to enable this.

Origin: vendor
Forwarded: not-needed
Signed-off-by: Guillem Jover <guillem@hadrons.org>
---
 src/aio_pgetevents.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/aio_pgetevents.c b/src/aio_pgetevents.c
index 89cec7b..7f55ead 100644
--- a/src/aio_pgetevents.c
+++ b/src/aio_pgetevents.c
@@ -26,6 +26,15 @@
 #include "aio_time.h"
 #include "aio_ring.h"
 
+/*
+ * FIXME: On 64-bit kernels running 32-bit userland, this syscall misbehaves
+ * when passing a sigmask by always returning -EINVAL. This works on 32-bit
+ * kernels. The syscall entry point is possible wrong and needs to be fixed
+ * in the kernel. For now disable as the code is handling clean 64-bit time_t
+ * and the timeout is relative anyway.
+ */
+#undef __NR_io_pgetevents_time64
+
 #ifdef __NR_io_pgetevents
 io_syscall6(int, __io_pgetevents, io_pgetevents, io_context_t, ctx,
 		long, min_nr, long, nr, struct io_event *, events,
-- 
2.43.0

