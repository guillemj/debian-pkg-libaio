From 6f0b6fb5bb3ac118cb56848e52d40ff7e1ece3d1 Mon Sep 17 00:00:00 2001
From: Stephan Springl <springl-libaio@bfw-online.de>
Date: Sat, 20 Jul 2019 21:18:13 +0200
Subject: [PATCH libaio 15/28] man: Escape verbatim \n in order to make it
 through roff

Signed-off-by: Guillem Jover <guillem@hadrons.org>
Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
---
 man/io.3 | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/man/io.3 b/man/io.3
index f40da41..bfa9836 100644
--- a/man/io.3
+++ b/man/io.3
@@ -174,11 +174,11 @@ static const char *srcname = NULL;
 static void io_error(const char *func, int rc)
 {
     if (rc == -ENOSYS)
-	fprintf(stderr, "AIO not in this kernel\n");
+	fprintf(stderr, "AIO not in this kernel\\n");
     else if (rc < 0 && -rc < sys_nerr)
-	fprintf(stderr, "%s: %s\n", func, sys_errlist[-rc]);
+	fprintf(stderr, "%s: %s\\n", func, sys_errlist[-rc]);
     else
-	fprintf(stderr, "%s: error %d\n", func, rc);
+	fprintf(stderr, "%s: error %d\\n", func, rc);
 
     if (dstfd > 0)
 	close(dstfd);
@@ -197,7 +197,7 @@ static void wr_done(io_context_t ctx, struct iocb *iocb, long res, long res2)
 	io_error("aio write", res2);
     }
     if (res != iocb->u.c.nbytes) {
-	fprintf(stderr, "write missed bytes expect %d got %d\n", iocb->u.c.nbytes, res2);
+	fprintf(stderr, "write missed bytes expect %d got %d\\n", iocb->u.c.nbytes, res2);
 	exit(1);
     }
     --tocopy;
@@ -223,7 +223,7 @@ static void rd_done(io_context_t ctx, struct iocb *iocb, long res, long res2)
     if (res2 != 0)
 	io_error("aio read", res2);
     if (res != iosize) {
-	fprintf(stderr, "read missing bytes expect %d got %d\n", iocb->u.c.nbytes, res);
+	fprintf(stderr, "read missing bytes expect %d got %d\\n", iocb->u.c.nbytes, res);
 	exit(1);
     }
 
@@ -283,7 +283,7 @@ int main(int argc, char *const *argv)
 		char *buf = (char *) malloc(iosize);
 
 		if (NULL == buf || NULL == io) {
-		    fprintf(stderr, "out of memory\n");
+		    fprintf(stderr, "out of memory\\n");
 		    exit(1);
 		}
 
-- 
2.26.0.292.g33ef6b2f38

