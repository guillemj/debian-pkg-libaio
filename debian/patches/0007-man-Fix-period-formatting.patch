From 0319efeeea3dbd4b53b81934b4f24bba96d77959 Mon Sep 17 00:00:00 2001
From: Guillem Jover <guillem@hadrons.org>
Date: Sat, 20 Jul 2019 21:18:05 +0200
Subject: [PATCH libaio 07/28] man: Fix period formatting

Signed-off-by: Guillem Jover <guillem@hadrons.org>
Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
---
 man/io.3               | 13 +++++--------
 man/io_fsync.3         |  2 +-
 man/io_getevents.3     |  3 +--
 man/io_prep_fsync.3    |  2 +-
 man/io_prep_pread.3    |  5 ++---
 man/io_prep_pwrite.3   |  5 ++---
 man/io_queue_release.3 |  2 +-
 man/io_queue_run.3     |  2 +-
 man/io_queue_wait.3    |  2 +-
 man/io_submit.3        |  8 ++++----
 10 files changed, 19 insertions(+), 25 deletions(-)

diff --git a/man/io.3 b/man/io.3
index e4fe108..7b8ab5e 100644
--- a/man/io.3
+++ b/man/io.3
@@ -17,8 +17,8 @@ then immediately resume normal work while the I/O operations are
 executed in parallel.  
 
 These functions are part of the library with realtime functions named
-.IR "libaio"
-.  They are not actually part of the 
+.IR libaio .
+They are not actually part of the
 .IR "libc" 
 binary.
 The implementation of these functions can be done using support in the
@@ -98,8 +98,7 @@ where the read data is stored.
 .TP
 .IR "long u.c.nbytes"
 This element specifies the length of the buffer pointed to by 
-.IR "io_buf"
-.
+.IR io_buf .
 .TP
 .IR "int aio_reqprio"
 Is not currently used.
@@ -111,8 +110,7 @@ and store the next
 .IR "u.c.nbytes"
 bytes in the
 buffer pointed to by 
-.IR "buf"
-.
+.IR buf .
 .TP
 .B "IO_CMD_PWRITE"
 Start a write operation.  Write 
@@ -120,8 +118,7 @@ Start a write operation.  Write
 bytes starting at
 .IR "buf"
 into the file starting at position 
-.IR "u.c.offset"
-.
+.IR u.c.offset .
 .TP
 .B "IO_CMD_NOP"
 Do nothing for this control block.  This value is useful sometimes when
diff --git a/man/io_fsync.3 b/man/io_fsync.3
index 77a62ff..03c81bc 100644
--- a/man/io_fsync.3
+++ b/man/io_fsync.3
@@ -39,7 +39,7 @@ resources (mainly computation time).
 Calling this function forces all I/O operations operating queued at the
 time of the function call operating on the file descriptor
 .IR "iocb->io_fildes"
-into the synchronized I/O completion state .  The 
+into the synchronized I/O completion state.  The
 .IR "io_fsync"
 function returns
 immediately but the notification through the method described in
diff --git a/man/io_getevents.3 b/man/io_getevents.3
index c8f2676..24c07c3 100644
--- a/man/io_getevents.3
+++ b/man/io_getevents.3
@@ -107,8 +107,7 @@ argument is specified as NULL, then no signal mask manipulation is
 performed (and thus
 .BR io_pgetevents ()
 behaves the same as
-.BR io_getevents()
-) .
+.BR io_getevents() ).
 .SH ERRORS
 .TP
 .B EINVAL 
diff --git a/man/io_prep_fsync.3 b/man/io_prep_fsync.3
index 3a5f952..cf4ecff 100644
--- a/man/io_prep_fsync.3
+++ b/man/io_prep_fsync.3
@@ -62,7 +62,7 @@ forced to the relevant completion state. The completion of
 subsequent I/O on the file descriptor is not guaranteed to be
 completed in a synchronized fashion.
 .PP
-This function returns immediately . To schedule the operation, the
+This function returns immediately. To schedule the operation, the
 function
 .IR io_submit
 must be called.
diff --git a/man/io_prep_pread.3 b/man/io_prep_pread.3
index a4df182..6d66c0f 100644
--- a/man/io_prep_pread.3
+++ b/man/io_prep_pread.3
@@ -44,15 +44,14 @@ bytes of the file for which
 is a descriptor are written to the buffer
 starting at
 .TP
-.IR "iocb->u.c.buf = buf"
-.
+.IR "iocb->u.c.buf = buf" .
 .br
 Reading starts at the absolute position
 .TP
 .IR "ioc->u.c.offset = offset"
 in the file.
 .PP
-This function returns immediately . To schedule the operation, the
+This function returns immediately. To schedule the operation, the
 function 
 .IR io_submit
 must be called.
diff --git a/man/io_prep_pwrite.3 b/man/io_prep_pwrite.3
index 73c62c7..98b3a65 100644
--- a/man/io_prep_pwrite.3
+++ b/man/io_prep_pwrite.3
@@ -42,15 +42,14 @@ bytes of the file for which
 is a descriptor are written from the buffer
 starting at
 .TP
-.IR "iocb->u.c.buf = buf"
-.
+.IR "iocb->u.c.buf = buf" .
 .br
 Writing starts at the absolute position
 .TP
 .IR "ioc->u.c.offset = offset"
 in the file.
 .PP
-This function returns immediately . To schedule the operation, the
+This function returns immediately. To schedule the operation, the
 function
 .IR io_submit
 must be called.
diff --git a/man/io_queue_release.3 b/man/io_queue_release.3
index f927562..db91bad 100644
--- a/man/io_queue_release.3
+++ b/man/io_queue_release.3
@@ -12,7 +12,7 @@ io_queue_release \- Release the context associated with the userspace handle
 .sp
 .SH DESCRIPTION
 .B io_queue_release
-destroys the context associated with the userspace handle.    May cancel any outstanding
+destroys the context associated with the userspace handle. May cancel any outstanding
 AIOs and block on completion.
 
 .B cts.
diff --git a/man/io_queue_run.3 b/man/io_queue_run.3
index 35f385b..018257f 100644
--- a/man/io_queue_run.3
+++ b/man/io_queue_run.3
@@ -30,7 +30,7 @@ referenced data outside of the program's accessible address space.
 .I ctx 
 refers to an unitialized aio context, the iocb pointed to by
 .I iocbs 
-contains an improperly initialized iocb,
+contains an improperly initialized iocb.
 .TP
 .B ENOSYS 
 Not implemented.
diff --git a/man/io_queue_wait.3 b/man/io_queue_wait.3
index eb6db83..e3598d9 100644
--- a/man/io_queue_wait.3
+++ b/man/io_queue_wait.3
@@ -36,7 +36,7 @@ referenced data outside of the program's accessible address space.
 .I ctx 
 refers to an unitialized aio context, the iocb pointed to by
 .I iocbs 
-contains an improperly initialized iocb,
+contains an improperly initialized iocb.
 .TP
 .B ENOSYS 
 Not implemented.
diff --git a/man/io_submit.3 b/man/io_submit.3
index a810b3f..76e68d1 100644
--- a/man/io_submit.3
+++ b/man/io_submit.3
@@ -49,12 +49,12 @@ gets the
 .IR "nr"
 requests from the array pointed to
 by 
-.IR "iocbs"
-.  The operation to be performed is determined by the
+.IR "iocbs" .
+The operation to be performed is determined by the
 .IR "aio_lio_opcode"
 member in each element of 
-.IR "iocbs"
-.  If this
+.IR "iocbs" .
+If this
 field is 
 .B "IO_CMD_PREAD"
 a read operation is enqueued, similar to a call
-- 
2.26.0.292.g33ef6b2f38

